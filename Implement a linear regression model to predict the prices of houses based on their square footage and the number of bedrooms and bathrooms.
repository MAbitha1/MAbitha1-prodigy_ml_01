# Importing necessary libraries
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Generating some sample data for demonstration purposes
np.random.seed(0)
num_samples = 1000
square_footage = np.random.randint(1000, 3000, num_samples)
num_bedrooms = np.random.randint(1, 6, num_samples)
num_bathrooms = np.random.randint(1, 4, num_samples)
prices = 100 * square_footage + 20000 * num_bedrooms + 30000 * num_bathrooms + np.random.normal(0, 10000, num_samples)

# Reshaping data for model input
X = np.column_stack((square_footage, num_bedrooms, num_bathrooms))
y = prices

# Splitting data into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Creating and fitting the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predicting prices on the test set
y_pred = model.predict(X_test)

# Evaluating the model
mse = mean_squared_error(y_test, y_pred)
print("Mean Squared Error:", mse)

# Example usage of the model
# Let's say we have a house with 2000 sq. ft., 3 bedrooms, and 2 bathrooms
new_house = np.array([[2000, 3, 2]])
predicted_price = model.predict(new_house)
print("Predicted price for the new house:", predicted_price[0]
